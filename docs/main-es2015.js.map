{"version":3,"sources":["./projects/ng-wizard/src/lib/ng-wizard-buttons/ng-wizard-buttons.component.ts","./projects/ng-wizard/src/lib/ng-wizard-buttons/ng-wizard-buttons.component.html","./projects/ng-wizard/src/lib/ng-wizard-error/ng-wizard-error-type.enum.ts","./projects/ng-wizard/src/lib/ng-wizard-error/ng-wizard-error.component.ts","./projects/ng-wizard/src/lib/ng-wizard-error/ng-wizard-error.component.html","./projects/ng-wizard/src/lib/ng-wizard-error/ng-wizard.error.ts","./projects/ng-wizard/src/lib/ng-wizard-navigation/ng-wizard-navigation.component.ts","./projects/ng-wizard/src/lib/ng-wizard-navigation/ng-wizard-navigation.component.html","./projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step.ts","./projects/ng-wizard/src/lib/ng-wizard.component.ts","./projects/ng-wizard/src/lib/ng-wizard.component.html","./projects/ng-wizard/src/lib/ng-wizard.module.ts","./projects/ng-wizard/src/lib/ng-wizard.service.ts","./projects/ng-wizard/src/lib/ng-wizard.utils.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/step1/step1.component.ts","./src/app/step1/step1.component.html","./src/app/step2/step2.component.ts","./src/app/step2/step2.component.html","./src/app/step3/step3.component.ts","./src/app/step3/step3.component.html","./src/app/step4/step4.component.ts","./src/app/step4/step4.component.html","./src/app/step5/step5.component.ts","./src/app/step5/step5.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardService } from '../ng-wizard.service';\r\nimport { NgWizardStepData } from '../ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { Observable } from 'rxjs';\r\nimport { NgWizardOptions } from '../ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-buttons',\r\n  templateUrl: './ng-wizard-buttons.component.html',\r\n  styleUrls: ['./ng-wizard-buttons.component.scss'],\r\n})\r\nexport class NgWizardButtonsComponent implements OnInit {\r\n  public currentStepData$: Observable<NgWizardStepData>;\r\n\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  constructor(private service: NgWizardService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentStepData$ = this.service.getCurrentStepDataAsObservable();\r\n    this.wizardOptions = this.service.wizardOptions;\r\n  }\r\n\r\n  goToNextStep() {\r\n    this.service.navigateToNextStep();\r\n  }\r\n\r\n  goToPreviousStep() {\r\n    this.service.navigateToPreviousStep();\r\n  }\r\n\r\n  goToPath(path: string) {\r\n    this.service.navigateToPath(path);\r\n  }\r\n\r\n}\r\n","<div class=\"ng-wizard-buttons-container\">\r\n  <div *ngIf=\"currentStepData$ | async as currentStepData\" class=\"ng-wizard-buttons\">\r\n    <button *ngIf=\"currentStepData.options.buttons?.extra\"\r\n            (click)=\"goToPath(currentStepData.options.buttons?.extra.path)\"\r\n            class=\"ng-wizard-button-extra\">\r\n      <span\r\n        [innerHTML]=\"currentStepData.options.buttons.extra.label\"\r\n        class=\"ng-wizard-button-label\"></span>\r\n    </button>\r\n    <button *ngIf=\"currentStepData.previousStep && !currentStepData.options.buttons?.previous?.hidden\"\r\n            (click)=\"goToPreviousStep()\"\r\n            class=\"ng-wizard-button-previous\">\r\n      <span\r\n        [innerHTML]=\"currentStepData.options.buttons?.previous?.label || wizardOptions.buttons.previous.label\"\r\n        class=\"ng-wizard-button-label\"></span>\r\n    </button>\r\n    <button *ngIf=\"currentStepData.nextStep && !currentStepData.options.buttons?.next?.hidden\"\r\n            (click)=\"goToNextStep()\"\r\n            class=\"ng-wizard-button-next\">\r\n      <span\r\n        [innerHTML]=\"currentStepData.options.buttons?.next?.label || wizardOptions.buttons.next.label\"\r\n        class=\"ng-wizard-button-label\"></span>\r\n    </button>\r\n  </div>\r\n</div>\r\n","// TODO: evaluate if this is useful\r\nexport enum NgWizardErrorType {\r\n  NO_WIZARD_ROUTE,\r\n  NO_CHILD_ROUTES,\r\n  NO_WS_INTERFACE,\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgWizardErrorType } from './ng-wizard-error-type.enum';\r\nimport { NgWizardError } from './ng-wizard.error';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-error',\r\n  templateUrl: './ng-wizard-error.component.html',\r\n  styleUrls: ['./ng-wizard-error.component.scss']\r\n})\r\nexport class NgWizardErrorComponent {\r\n  @Input() public error: NgWizardError;\r\n\r\n  public NgWizardErrorType = NgWizardErrorType;\r\n}\r\n","<div *ngIf=\"error\" class=\"ng-wizard-error\">\r\n  <div [ngSwitch]=\"error.type\" class=\"ng-wizard-error-message\">\r\n\r\n    <!-- NO_WIZARD_ROUTE error -->\r\n\r\n    <span *ngSwitchCase=\"NgWizardErrorType.NO_WIZARD_ROUTE\" class=\"no-wizard-route\">\r\n      No route configuration for the {{ error.wizardComponentName }} found.<br/>\r\n      Add a route for the {{ error.wizardComponentName }} to your AppRoutingModule.<br/>\r\n      <pre>\r\nconst routes: Routes = [\r\n    &#123; path: '', component: {{ error.wizardComponentName }} &#125;,\r\n];\r\n\r\n@NgModule(&#123;\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n&#125;)\r\nexport class AppRoutingModule &#123; &#125;</pre>\r\n    </span>\r\n\r\n    <!-- NO_CHILD_ROUTES error -->\r\n\r\n    <span *ngSwitchCase=\"NgWizardErrorType.NO_CHILD_ROUTES\" class=\"no-child-routes\">\r\n      No child routes for the {{ error.wizardComponentName }} found.<br/>\r\n      Add at least one child route for the {{ error.wizardComponentName }} to your AppRoutingModule.<br/>\r\n      <pre>\r\n&#123; path: '{{ error.wizardPath }}', component: {{ error.wizardComponentName }}, children: [\r\n    &#123; path: 'step1', component: Step1Component &#125;,\r\n    &#123; path: '**', redirectTo: 'step1' &#125;,\r\n] &#125;,</pre>\r\n    </span>\r\n\r\n    <!-- NO_WS_INTERFACE error -->\r\n\r\n    <span *ngSwitchCase=\"NgWizardErrorType.NO_WS_INTERFACE\" class=\"no-ws-interface\">\r\n      The {{ error.stepComponentName}} does not extend the NgWizardStep class or implement the\r\n      NgWizardStepInterface.<br/>\r\n      Extend the NgWizardStep class in your {{ error.stepComponentName}} or implement the\r\n      NgWizardStepInterface.<br/>\r\n      <pre>\r\n@NgComponent(...)\r\nexport class {{ error.stepComponentName }} extends NgWizardStep &#123;\r\n    constructor() &#123;\r\n        super();\r\n    &#125;\r\n&#125;</pre><br/>\r\n      or<br/>\r\n      <pre>\r\n@NgComponent(...)\r\nexport class {{ error.stepComponentName }} implements NgWizardStepInterface &#123;\r\n    wsIsValid() &#123;\r\n        return true;\r\n    &#125;\r\n    wsOnNext() &#123; &#125;\r\n    wsOnPrevious() &#123; &#125;\r\n&#125;</pre>\r\n    </span>\r\n\r\n  </div>\r\n</div>\r\n","import { NgWizardErrorType } from './ng-wizard-error-type.enum';\r\n\r\nexport abstract class NgWizardError extends Error {\r\n  public type: NgWizardErrorType;\r\n\r\n  public wizardComponentName = '';\r\n  public wizardPath = '';\r\n  public stepComponentName = '';\r\n\r\n  protected constructor(type: NgWizardErrorType, message: string) {\r\n    super(message);\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport class NoWizardRoute extends NgWizardError {\r\n  constructor(public wizardComponentName: string) {\r\n    super(\r\n      NgWizardErrorType.NO_WIZARD_ROUTE,\r\n      `No route configuration for the ${wizardComponentName} found.`,\r\n    );\r\n  }\r\n}\r\n\r\nexport class NoChildRoutes extends NgWizardError {\r\n  constructor(public wizardComponentName: string, public wizardPath: string) {\r\n    super(\r\n      NgWizardErrorType.NO_CHILD_ROUTES,\r\n      `No child routes for the ${wizardComponentName} found.`,\r\n    );\r\n  }\r\n}\r\n\r\nexport class NoWsInterface extends NgWizardError {\r\n  constructor(public stepComponentName: string) {\r\n    super(\r\n      NgWizardErrorType.NO_WS_INTERFACE,\r\n      `The ${stepComponentName} does not extend the NgWizardStep class or implement the NgWizardStepInterface.`,\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardService } from '../ng-wizard.service';\r\nimport { NgWizardStepData } from '../ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardOptions } from '../ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-navigation',\r\n  templateUrl: './ng-wizard-navigation.component.html',\r\n  styleUrls: ['./ng-wizard-navigation.component.scss']\r\n})\r\nexport class NgWizardNavigationComponent implements OnInit {\r\n  public stepData$;\r\n  public currentStepData;\r\n\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  constructor(private service: NgWizardService) { }\r\n\r\n  ngOnInit() {\r\n    this.stepData$ = this.service.getStepDataChangesAsObservable();\r\n    this.service.getCurrentStepDataAsObservable().subscribe(stepData => this.currentStepData = stepData);\r\n    this.wizardOptions = this.service.wizardOptions;\r\n  }\r\n\r\n  public goToStep(stepData: NgWizardStepData) {\r\n    if ((this.currentStepData && this.currentStepData.options && this.currentStepData.options.disableNavigation)\r\n        || stepData.order >= this.currentStepData.order) {\r\n      return;\r\n    }\r\n    this.service.navigateToStep(stepData);\r\n  }\r\n}\r\n","<div class=\"ng-wizard-navigation-container\">\r\n  <nav class=\"ng-wizard-navigation\">\r\n    <ul class=\"ng-wizard-navigation-list\">\r\n      <li *ngFor=\"let stepData of stepData$ | async\" class=\"ng-wizard-navigation-list-item\" (click)=\"goToStep(stepData);\">\r\n        <div *ngIf=\"stepData?.order < currentStepData?.order\"\r\n             [ngClass]=\"{\r\n               'ng-wizard-navigation-link': !currentStepData?.options.disableNavigation,\r\n               'ng-wizard-navigation-disabled': currentStepData?.options.disableNavigation\r\n             }\">\r\n          <span [innerHTML]=\"stepData.options.icon || wizardOptions.navBar.icons.previous\" class=\"ng-wizard-navigation-icon\"></span>\r\n          <span class=\"ng-wizard-navigation-label\">\r\n            {{ stepData.options.title }}\r\n          </span>\r\n        </div>\r\n\r\n        <div\r\n          *ngIf=\"stepData?.order === currentStepData?.order\"\r\n          class=\"ng-wizard-navigation-active\">\r\n          <span [innerHTML]=\"stepData.options.icon || wizardOptions.navBar.icons.current\" class=\"ng-wizard-navigation-icon\"></span>\r\n          <span class=\"ng-wizard-navigation-label\">\r\n            {{ stepData.options.title }}\r\n          </span>\r\n        </div>\r\n\r\n        <div *ngIf=\"stepData?.order > currentStepData?.order\"\r\n             class=\"ng-wizard-navigation-disabled\">\r\n          <span [innerHTML]=\"stepData.options.icon || wizardOptions.navBar.icons.next\" class=\"ng-wizard-navigation-icon\"></span>\r\n          <span class=\"ng-wizard-navigation-label\">\r\n            {{ stepData.options.title }}\r\n          </span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n","import { NgWizardStepInterface } from './ng-wizard-step.interface';\r\n\r\nexport abstract class NgWizardStep implements NgWizardStepInterface {\r\n  wsIsValid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  wsOnNext(): void | boolean {\r\n    return;\r\n  }\r\n\r\n  wsOnPrevious(): void | boolean {\r\n    return;\r\n  }\r\n}\r\n","import { Component, ComponentRef } from '@angular/core';\r\nimport { NgWizardService } from './ng-wizard.service';\r\n\r\n@Component({\r\n  selector: 'ng-wizard',\r\n  templateUrl: './ng-wizard.component.html',\r\n})\r\nexport class NgWizardComponent {\r\n  public error: Error;\r\n\r\n  constructor(private service: NgWizardService) {\r\n    try {\r\n      this.service.loadWizardRoutes(this.constructor.name);\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public onActivate(componentRef: ComponentRef<any>) {\r\n    try {\r\n      this.service.registerActiveComponent(componentRef);\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n}\r\n","<div class=\"ng-wizard-container\">\r\n  <ng-wizard-error [error]=\"error\"></ng-wizard-error>\r\n  <ng-wizard-navigation></ng-wizard-navigation>\r\n  <div class=\"ng-wizard-content-container\">\r\n    <router-outlet (activate)=\"onActivate($event)\"></router-outlet>\r\n  </div>\r\n  <ng-wizard-buttons></ng-wizard-buttons>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { NgWizardComponent } from './ng-wizard.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgWizardErrorComponent } from './ng-wizard-error/ng-wizard-error.component';\r\nimport { NgWizardNavigationComponent } from './ng-wizard-navigation/ng-wizard-navigation.component';\r\nimport { NgWizardButtonsComponent } from './ng-wizard-buttons/ng-wizard-buttons.component';\r\nimport { NgWizardService } from './ng-wizard.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgWizardComponent,\r\n    NgWizardErrorComponent,\r\n    NgWizardNavigationComponent,\r\n    NgWizardButtonsComponent,\r\n  ],\r\n  imports: [CommonModule, RouterModule],\r\n  providers: [NgWizardService],\r\n  exports: [NgWizardComponent],\r\n})\r\nexport class NgWizardModule {}\r\n","import { ComponentRef, Injectable } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport * as utils from './ng-wizard.utils';\r\nimport { NoChildRoutes, NoWizardRoute, NoWsInterface } from './ng-wizard-error/ng-wizard.error';\r\nimport { NgWizardStepData } from './ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardStep } from './ng-wizard-step/ng-wizard-step';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgWizardOptions } from './ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Injectable()\r\nexport class NgWizardService {\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  private wizardRoute: Route;\r\n  private stepData: NgWizardStepData[] = [];\r\n  private currentStepData: NgWizardStepData;\r\n  private currentComponent: NgWizardStep;\r\n\r\n  private stepDataChanges = new BehaviorSubject<NgWizardStepData[]>([]);\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  /**\r\n   * Initializes the wizard by parsing the wizard's child routes found in Angular's router config\r\n   * into a list of NgWizardStepData.\r\n   * @param wizardComponentName The name of the wizard component\r\n   */\r\n  public loadWizardRoutes(wizardComponentName: string) {\r\n    this.wizardRoute = this.getWizardRoute(wizardComponentName);\r\n    if (!this.wizardRoute) {\r\n      throw new NoWizardRoute(wizardComponentName);\r\n    }\r\n    this.wizardOptions = utils.mergeWizardOptions(this.wizardRoute.data);\r\n    this.loadChildRoutes(this.wizardRoute);\r\n  }\r\n\r\n  /**\r\n   * Checks and stores the currently displayed component.\r\n   * @param componentRef A reference to the currently displayed component\r\n   */\r\n  public registerActiveComponent(componentRef: ComponentRef<any>) {\r\n    if (!utils.componentImplementsNgWizardStepInterface(componentRef)) {\r\n      throw new NoWsInterface(componentRef.constructor.name);\r\n    }\r\n\r\n    // Cast to unknown before casting to NgWizardStep to let typescript know we checked and approve\r\n    // this conversion.\r\n    this.currentComponent = (componentRef as unknown) as NgWizardStep;\r\n    this.currentStepData = utils.getStepDataForUrl(this.stepData, this.router.url);\r\n    this.currentStepData.componentRef = componentRef;\r\n    this.resetCurrentStep();\r\n    this.currentStepData.isCurrent = true;\r\n    this.onStepDataChange();\r\n  }\r\n\r\n  /**\r\n   * Calls the current component's wsOnPrevious() or wsOnNext()) methods and navigates to the given\r\n   * step if the component does not abort or its state is invalid (for next navigation).\r\n   *\r\n   * @param stepData The NgWizardStepData of the the step to navigate to\r\n   */\r\n  public navigateToStep(stepData: NgWizardStepData) {\r\n    let goAhead;\r\n    if (this.currentStepData.order > stepData.order) {\r\n      goAhead = this.currentComponent.wsOnPrevious();\r\n    } else {\r\n      goAhead = this.currentComponent.wsIsValid() && this.currentComponent.wsOnNext();\r\n    }\r\n    if (goAhead === false) {\r\n      return;\r\n    }\r\n\r\n    let stepPath = stepData.path;\r\n    // If the wizard is added to a specific path in the application we have to join that path and\r\n    // the step's path as the path to navigate to.\r\n    // The Angular Router's relativeTo option does not seem to work when using the hash location\r\n    // strategy.\r\n    if (this.wizardRoute.path) {\r\n      stepPath = [this.wizardRoute.path, stepData.path].join('/');\r\n    }\r\n\r\n    if (stepData.options.cleanQueryParameters) {\r\n      return this.router.navigate([stepPath], { queryParams: {} });\r\n    } else {\r\n      return this.router.navigate([stepPath], { queryParamsHandling: 'merge' });\r\n    }\r\n    return this.router.navigate([stepPath], { queryParamsHandling: 'merge' });\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to the next step.\r\n   */\r\n  public navigateToNextStep() {\r\n    const nextStepData = utils.getStepDataForPath(this.stepData, this.currentStepData.nextStep);\r\n    return this.navigateToStep(nextStepData);\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to the previous step.\r\n   */\r\n  public navigateToPreviousStep() {\r\n    const previousStepData = utils.getStepDataForPath(this.stepData, this.currentStepData.previousStep);\r\n\r\n    return this.navigateToStep(previousStepData);\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to a specific route path (external to the wizard)\r\n   */\r\n  public navigateToPath(path: string) {\r\n    return this.router.navigate([path], { queryParamsHandling: 'merge' });\r\n  }\r\n\r\n  /**\r\n   * Returns the step data changes as an observable.\r\n   */\r\n  public getStepDataChangesAsObservable(): Observable<NgWizardStepData[]> {\r\n    return this.stepDataChanges.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Returns the current step data as an observable.\r\n   */\r\n  // TODO: Write a unit test for this method\r\n  public getCurrentStepDataAsObservable(): Observable<NgWizardStepData> {\r\n    return this.getStepDataChangesAsObservable().pipe(\r\n      map((stepDatas) => stepDatas.find((stepData) => stepData.isCurrent)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the Angular Route for the wizard component found in Angular's router config.\r\n   * @param wizardComponentName The name of the wizard component\r\n   */\r\n  private getWizardRoute(wizardComponentName: string): Route {\r\n    return this.router.config.find((route) => route.component && route.component.name === wizardComponentName);\r\n  }\r\n\r\n  /**\r\n   * Parses the child routes of the wizard component route and stores them as a list of\r\n   * NgWizardStepData.\r\n   * @param wizardRoute The Angular Route for the wizard component\r\n   */\r\n  private loadChildRoutes(wizardRoute: Route) {\r\n    if (!wizardRoute.children) {\r\n      throw new NoChildRoutes(wizardRoute.component.name, wizardRoute.path);\r\n    }\r\n\r\n    const childRoutes = wizardRoute.children.filter((route) => route.component);\r\n\r\n    this.stepData = [];\r\n    for (let i = 0; i < childRoutes.length; i++) {\r\n      this.registerStep(i, childRoutes[i], childRoutes[i - 1], childRoutes[i + 1]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stores a child route as an NgWizardStepData.\r\n   * @param index The index in the list of child routes\r\n   * @param stepRoute The child route\r\n   * @param previousStep The previous child route (undefined if first child route)\r\n   * @param nextStep The next child route (undefined if last child route)\r\n   */\r\n  private registerStep(index: number, stepRoute: Route, previousStep: Route, nextStep: Route) {\r\n    this.stepData.push({\r\n      order: index + 1,\r\n      componentName: stepRoute.component.name,\r\n      path: stepRoute.path,\r\n      previousStep: previousStep ? previousStep.path : undefined,\r\n      nextStep: nextStep ? nextStep.path : undefined,\r\n      isCurrent: false,\r\n      options: utils.getWizardStepOptions(stepRoute),\r\n    });\r\n    this.onStepDataChange();\r\n  }\r\n\r\n  /**\r\n   * Emits a step data change event to the subscribers when the step data changes.\r\n   */\r\n  private onStepDataChange() {\r\n    this.stepDataChanges.next(this.stepData);\r\n  }\r\n\r\n  /**\r\n   * Sets the isCurrent attribute of all step data to false.\r\n   */\r\n  private resetCurrentStep() {\r\n    this.stepData.map((stepData) => {\r\n      stepData.isCurrent = false;\r\n      return stepData;\r\n    });\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { ComponentRef } from '@angular/core';\r\nimport { NgWizardStepData } from './ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardOptions } from './ng-wizard-options/ng-wizard-options.interface';\r\nimport { NgWizardStepOptions } from './ng-wizard-step/ng-wizard-step-options';\r\n\r\n/**\r\n * Returns true if the component extends the NgWizardStep class or implements the NgWizardStepInterface.\r\n *\r\n * @param componentRef The reference to the component to verify\r\n */\r\nexport function componentImplementsNgWizardStepInterface(componentRef: ComponentRef<any>): boolean {\r\n  return 'wsIsValid' in componentRef && 'wsOnNext' in componentRef && 'wsOnPrevious' in componentRef;\r\n}\r\n\r\n/**\r\n * Returns the NgWizardStepData with the given path in the stepData list or undefined if none is\r\n * found.\r\n *\r\n * @param stepData The list with NgWizardStepDatas\r\n * @param path The path you want to get the NgWizardStepData for\r\n */\r\nexport function getStepDataForPath(stepData: NgWizardStepData[], path: string) {\r\n  return stepData.find(data => data.path === path);\r\n}\r\n\r\n/**\r\n * Returns the NgWizardStepData for the given url in the stepData list or undefined if none is\r\n * found.\r\n *\r\n * @param stepData The list with NgWizardStepDatas\r\n * @param url The url which you want to get the NgWizardStepData for\r\n */\r\nexport function getStepDataForUrl(stepData: NgWizardStepData[], url: string) {\r\n  // gets 'path' in the url '/wizard/path?key=value'\r\n  const path = url.split('/').pop().split('?')[0];\r\n  return getStepDataForPath(stepData, path);\r\n}\r\n\r\n/**\r\n * Returns the default wizard options.\r\n */\r\nexport function getDefaultWizardOptions(): NgWizardOptions {\r\n  return {\r\n    navBar: {\r\n      icons: {\r\n        previous: '<i class=\"material-icons ng-wizard-icon\">done</i>',\r\n        current: '<i class=\"material-icons ng-wizard-icon\">create</i>',\r\n        next: '<i class=\"material-icons ng-wizard-icon\">lock</i>',\r\n      },\r\n    },\r\n    buttons: {\r\n      previous: {\r\n        label: '<i class=\"material-icons ng-wizard-icon\">chevron_left</i> Previous',\r\n      },\r\n      next: {\r\n        label: 'Next <i class=\"material-icons ng-wizard-icon\">chevron_right</i>',\r\n      },\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Merges the wizard options in the wizard route's config with the default wizard options.\r\n *\r\n * @param wizardOptions The wizard options in the wizard route's config\r\n */\r\nexport function mergeWizardOptions(wizardOptions: {}): NgWizardOptions {\r\n  if (!wizardOptions) {\r\n    return getDefaultWizardOptions();\r\n  }\r\n\r\n  return { ...getDefaultWizardOptions(), ...wizardOptions };\r\n}\r\n\r\n/**\r\n * Returns the options passed to the wizard step route with an added title attribute.\r\n *\r\n * @param route The wizard step route configuration\r\n */\r\nexport function getWizardStepOptions(route: Route): NgWizardStepOptions {\r\n  if (!route.data) {\r\n    return { title: getStepTitleFromRoute(route) };\r\n  }\r\n\r\n  return {\r\n    ...route.data,\r\n    title: getStepTitleFromRoute(route),\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the step title based on the Route configuration.\r\n * If the route has a data.title attribute it will be returned.\r\n * Else the path will be capitalized and '-' or '_' characters will be replaces by spaces.\r\n *\r\n * @param route The Angular Route object\r\n */\r\nexport function getStepTitleFromRoute(route: Route): string {\r\n  if (route.data && route.data.title) {\r\n    return route.data.title;\r\n  }\r\n  return capitalize(insertSpaces(route.path));\r\n}\r\n\r\n/**\r\n * Capitalizes the first character of the passed value.\r\n */\r\nfunction capitalize(value: string): string {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\r\n}\r\n\r\n/**\r\n * Replaces '-' and '_' characters by spaces.\r\n */\r\nfunction insertSpaces(value: string): string {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  return value.replace(/[-_]/g, ' ').trim();\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgWizardComponent } from '../../projects/ng-wizard/src/lib/ng-wizard.component';\r\nimport { Step1Component } from './step1/step1.component';\r\nimport { Step2Component } from './step2/step2.component';\r\nimport { Step3Component } from './step3/step3.component';\r\nimport { Step4Component } from './step4/step4.component';\r\nimport { Step5Component } from './step5/step5.component';\r\n\r\nconst wizardConfig = {\r\n  // navBar: {\r\n  //   icons: {\r\n  //     previous: '<i class=\"material-icons ng-wizard-icon\">cake</i>',\r\n  //     current: '<i class=\"material-icons ng-wizard-icon\">star</i>',\r\n  //     next: '<i class=\"material-icons ng-wizard-icon\">pool</i>',\r\n  //   },\r\n  // },\r\n  // buttons: {\r\n  //   previous: {\r\n  //     label: '<i class=\"material-icons ng-wizard-icon\">arrow_left</i> Previous',\r\n  //   },\r\n  //   next: {\r\n  //     label: 'Next <i class=\"material-icons ng-wizard-icon\">arrow_right</i>',\r\n  //   },\r\n  // }\r\n};\r\n\r\nconst confirmationStepOptions = {\r\n  buttons: {\r\n    previous: {\r\n      label: '<i class=\"material-icons ng-wizard-icon\">create</i> Edit',\r\n    },\r\n    next: {\r\n      label: 'Confirm <i class=\"material-icons ng-wizard-icon\">done_all</i>',\r\n    }\r\n  }\r\n};\r\n\r\nconst doneStepOptions = {\r\n  icon: '<i class=\"material-icons ng-wizard-icon\">done_all</i>',\r\n  buttons: {\r\n    previous: {\r\n      hidden: true,\r\n    },\r\n  },\r\n  disableNavigation: true,\r\n};\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: NgWizardComponent, children: [\r\n      { path: 'personal', component: Step1Component },\r\n      { path: 'developer', component: Step2Component },\r\n      { path: 'angular', component: Step3Component },\r\n      { path: 'confirmation', component: Step4Component, data: confirmationStepOptions },\r\n      { path: 'done', component: Step5Component, data: doneStepOptions },\r\n      { path: '**', redirectTo: 'personal' },\r\n  ], data: wizardConfig},\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent { }\r\n","<div class=\"wizard-container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgWizardModule } from '../../projects/ng-wizard/src/lib/ng-wizard.module';\r\nimport { Step1Component } from './step1/step1.component';\r\nimport { Step2Component } from './step2/step2.component';\r\nimport { Step3Component } from './step3/step3.component';\r\nimport { Step4Component } from './step4/step4.component';\r\nimport { Step5Component } from './step5/step5.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    Step1Component,\r\n    Step2Component,\r\n    Step3Component,\r\n    Step4Component,\r\n    Step5Component\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgWizardModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n  public formValues = {\r\n    lastName: '',\r\n    firstName: '',\r\n    gitUser: '',\r\n    favoriteProject: '',\r\n    ngVersion: 0,\r\n    ngRouter: false,\r\n  };\r\n\r\n  public setFormValues(values: any) {\r\n    this.formValues = { ...this.formValues, ...values };\r\n  }\r\n\r\n  public step1IsValid() {\r\n    return this.formValues.lastName && this.formValues.firstName;\r\n  }\r\n\r\n  public step2IsValid() {\r\n    return this.step1IsValid();\r\n  }\r\n\r\n  public step3IsValid() {\r\n    return this.step2IsValid() && this.formValues.ngVersion >= 7;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppService } from '../app.service';\r\n\r\n@Component({\r\n  selector: 'app-step1',\r\n  templateUrl: './step1.component.html',\r\n})\r\nexport class Step1Component extends NgWizardStep implements OnInit {\r\n  public form = new FormGroup({\r\n    lastName: new FormControl('', Validators.required),\r\n    firstName: new FormControl('', Validators.required),\r\n  });\r\n\r\n  constructor(private service: AppService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form.get('lastName').setValue(this.service.formValues.lastName);\r\n    this.form.get('firstName').setValue(this.service.formValues.firstName);\r\n  }\r\n\r\n  wsIsValid() {\r\n    this.form.get('lastName').markAsTouched();\r\n    this.form.get('firstName').markAsTouched();\r\n\r\n    return this.form.valid;\r\n  }\r\n\r\n  wsOnNext() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n}\r\n","<div [formGroup]=\"form\">\r\n  <h1>Personal information</h1>\r\n  <p>\r\n    <label>Last name*</label>\r\n    <input type=\"text\" formControlName=\"lastName\" />\r\n  </p>\r\n  <p>\r\n    <label>First name*</label>\r\n    <input type=\"text\" formControlName=\"firstName\" />\r\n  </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { AppService } from '../app.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-step2',\r\n  templateUrl: './step2.component.html',\r\n})\r\nexport class Step2Component extends NgWizardStep implements OnInit {\r\n  public form = new FormGroup({\r\n    gitUser: new FormControl(''),\r\n    favoriteProject: new FormControl(''),\r\n  });\r\n\r\n  constructor(private service: AppService, private router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.service.step1IsValid()) {\r\n      return this.router.navigate(['personal']);\r\n    }\r\n\r\n    this.form.get('gitUser').setValue(this.service.formValues.gitUser);\r\n    this.form.get('favoriteProject').setValue(this.service.formValues.favoriteProject);\r\n  }\r\n\r\n  wsOnNext() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n\r\n  wsOnPrevious() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n}\r\n","<div [formGroup]=\"form\">\r\n  <h1>Developer profile</h1>\r\n  <p>\r\n    <label>GitHub username</label>\r\n    <input type=\"text\" formControlName=\"gitUser\" />\r\n  </p>\r\n  <p>\r\n    <label>Favorite GitHub project</label>\r\n    <input type=\"text\" formControlName=\"favoriteProject\" />\r\n  </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppService } from '../app.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-step3',\r\n  templateUrl: './step3.component.html',\r\n})\r\nexport class Step3Component extends NgWizardStep implements OnInit {\r\n  public form = new FormGroup({\r\n    ngVersion: new FormControl('', [Validators.required, this.validateNgVersion]),\r\n    ngRouter: new FormControl(''),\r\n  });\r\n\r\n  constructor(private service: AppService, private router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.service.step2IsValid()) {\r\n      return this.router.navigate(['developer']);\r\n    }\r\n\r\n    this.form.get('ngVersion').setValue(this.service.formValues.ngVersion);\r\n    this.form.get('ngRouter').setValue(this.service.formValues.ngRouter);\r\n  }\r\n\r\n  wsIsValid() {\r\n    this.form.get('ngVersion').markAsTouched();\r\n    return this.form.valid;\r\n  }\r\n\r\n  wsOnNext() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n\r\n  wsOnPrevious() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n\r\n  private validateNgVersion(control: FormControl) {\r\n    return control.value && control.value >= 9 ? null : { validateNgVersion: { valid: false } };\r\n  }\r\n}\r\n","<div [formGroup]=\"form\">\r\n  <h1>Angular usage</h1>\r\n  <p>\r\n    <label>Your project's Angular version*</label>\r\n    <input type=\"number\" formControlName=\"ngVersion\" size=\"3\"/>\r\n    <span class=\"error\"\r\n          *ngIf=\"form.get('ngVersion').touched && !form.get('ngVersion').valid\">\r\n      Version must be equal to or greater than 9.</span>\r\n  </p>\r\n  <p>\r\n    <input type=\"checkbox\" formControlName=\"ngRouter\" id=\"ngRouter\">\r\n    <label for=\"ngRouter\">Your projects includes Angular's Router</label>\r\n  </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\nimport { AppService } from '../app.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-step4',\r\n  templateUrl: './step4.component.html',\r\n})\r\nexport class Step4Component extends NgWizardStep implements OnInit {\r\n  public values;\r\n\r\n  constructor(private service: AppService, private router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.service.step3IsValid()) {\r\n      return this.router.navigate(['angular']);\r\n    }\r\n\r\n    this.values = this.service.formValues;\r\n  }\r\n}\r\n","<h1>Confirmation</h1>\r\n<table>\r\n  <tr>\r\n    <td>Last name</td>\r\n    <td>{{values.lastName}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>First name</td>\r\n    <td>{{values.firstName}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>GitHub username</td>\r\n    <td>{{values.gitUser}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Favorite GitHub project</td>\r\n    <td>{{values.favoriteProject}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Angular version</td>\r\n    <td>{{values.ngVersion}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Angular router</td>\r\n    <td>{{values.ngRouter ? 'Yes' : 'No'}}</td>\r\n  </tr>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\n\r\n@Component({\r\n  selector: 'app-step5',\r\n  templateUrl: './step5.component.html',\r\n})\r\nexport class Step5Component extends NgWizardStep {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\n\r\n","<h1>All steps completed!</h1>\r\n<br/>\r\nNavigation is disabled\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}