{"version":3,"sources":["webpack:///projects/ng-wizard/src/lib/ng-wizard-buttons/ng-wizard-buttons.component.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard-buttons/ng-wizard-buttons.component.html","webpack:///projects/ng-wizard/src/lib/ng-wizard-error/ng-wizard-error-type.enum.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard-error/ng-wizard-error.component.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard-error/ng-wizard-error.component.html","webpack:///projects/ng-wizard/src/lib/ng-wizard-error/ng-wizard.error.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard-navigation/ng-wizard-navigation.component.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard-navigation/ng-wizard-navigation.component.html","webpack:///projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard.component.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard.component.html","webpack:///projects/ng-wizard/src/lib/ng-wizard.module.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard.service.ts","webpack:///projects/ng-wizard/src/lib/ng-wizard.utils.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/step1/step1.component.ts","webpack:///src/app/step1/step1.component.html","webpack:///src/app/step2/step2.component.ts","webpack:///src/app/step2/step2.component.html","webpack:///src/app/step3/step3.component.ts","webpack:///src/app/step3/step3.component.html","webpack:///src/app/step4/step4.component.ts","webpack:///src/app/step4/step4.component.html","webpack:///src/app/step5/step5.component.ts","webpack:///src/app/step5/step5.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["NgWizardButtonsComponent","service","currentStepData$","getCurrentStepDataAsObservable","wizardOptions","navigateToNextStep","navigateToPreviousStep","path","navigateToPath","selector","templateUrl","styleUrls","NgWizardErrorType","NgWizardErrorComponent","NgWizardError","type","message","wizardComponentName","wizardPath","stepComponentName","Error","NoWizardRoute","NO_WIZARD_ROUTE","NoChildRoutes","NO_CHILD_ROUTES","NoWsInterface","NO_WS_INTERFACE","NgWizardNavigationComponent","stepData$","getStepDataChangesAsObservable","subscribe","stepData","currentStepData","options","disableNavigation","order","navigateToStep","NgWizardStep","NgWizardComponent","loadWizardRoutes","constructor","name","error","componentRef","registerActiveComponent","onActivate","NgWizardModule","declarations","imports","providers","exports","NgWizardService","router","stepDataChanges","wizardRoute","getWizardRoute","data","loadChildRoutes","currentComponent","url","resetCurrentStep","isCurrent","onStepDataChange","goAhead","wsOnPrevious","wsIsValid","wsOnNext","stepPath","join","cleanQueryParameters","navigate","queryParams","queryParamsHandling","nextStepData","nextStep","previousStepData","previousStep","asObservable","pipe","stepDatas","find","config","route","component","children","childRoutes","filter","i","length","registerStep","index","stepRoute","push","componentName","undefined","next","map","componentImplementsNgWizardStepInterface","getStepDataForPath","getStepDataForUrl","split","pop","getDefaultWizardOptions","navBar","icons","previous","current","buttons","label","mergeWizardOptions","getWizardStepOptions","title","getStepTitleFromRoute","capitalize","insertSpaces","value","charAt","toUpperCase","slice","toLowerCase","replace","trim","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","id","wizardConfig","confirmationStepOptions","doneStepOptions","icon","hidden","routes","redirectTo","AppRoutingModule","forRoot","useHash","AppComponent","AppModule","bootstrap","AppService","formValues","lastName","firstName","gitUser","favoriteProject","ngVersion","ngRouter","values","step1IsValid","step2IsValid","providedIn","Step1Component","form","required","get","setValue","markAsTouched","valid","setFormValues","Step2Component","Step3Component","validateNgVersion","control","Step4Component","step3IsValid","Step5Component","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardService } from '../ng-wizard.service';\r\nimport { NgWizardStepData } from '../ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { Observable } from 'rxjs';\r\nimport { NgWizardOptions } from '../ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-buttons',\r\n  templateUrl: './ng-wizard-buttons.component.html',\r\n  styleUrls: ['./ng-wizard-buttons.component.scss'],\r\n})\r\nexport class NgWizardButtonsComponent implements OnInit {\r\n  public currentStepData$: Observable<NgWizardStepData>;\r\n\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  constructor(private service: NgWizardService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentStepData$ = this.service.getCurrentStepDataAsObservable();\r\n    this.wizardOptions = this.service.wizardOptions;\r\n  }\r\n\r\n  goToNextStep() {\r\n    this.service.navigateToNextStep();\r\n  }\r\n\r\n  goToPreviousStep() {\r\n    this.service.navigateToPreviousStep();\r\n  }\r\n\r\n  goToPath(path: string) {\r\n    this.service.navigateToPath(path);\r\n  }\r\n\r\n}\r\n","<div class=\"ng-wizard-buttons-container\">\r\n  <div *ngIf=\"currentStepData$ | async as currentStepData\" class=\"ng-wizard-buttons\">\r\n    <button *ngIf=\"currentStepData.options.buttons?.extra\"\r\n            (click)=\"goToPath(currentStepData.options.buttons?.extra.path)\"\r\n            class=\"ng-wizard-button-extra\">\r\n      <span\r\n        [innerHTML]=\"currentStepData.options.buttons.extra.label\"\r\n        class=\"ng-wizard-button-label\"></span>\r\n    </button>\r\n    <button *ngIf=\"currentStepData.previousStep && !currentStepData.options.buttons?.previous?.hidden\"\r\n            (click)=\"goToPreviousStep()\"\r\n            class=\"ng-wizard-button-previous\">\r\n      <span\r\n        [innerHTML]=\"currentStepData.options.buttons?.previous?.label || wizardOptions.buttons.previous.label\"\r\n        class=\"ng-wizard-button-label\"></span>\r\n    </button>\r\n    <button *ngIf=\"currentStepData.nextStep && !currentStepData.options.buttons?.next?.hidden\"\r\n            (click)=\"goToNextStep()\"\r\n            class=\"ng-wizard-button-next\">\r\n      <span\r\n        [innerHTML]=\"currentStepData.options.buttons?.next?.label || wizardOptions.buttons.next.label\"\r\n        class=\"ng-wizard-button-label\"></span>\r\n    </button>\r\n  </div>\r\n</div>\r\n","// TODO: evaluate if this is useful\r\nexport enum NgWizardErrorType {\r\n  NO_WIZARD_ROUTE,\r\n  NO_CHILD_ROUTES,\r\n  NO_WS_INTERFACE,\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgWizardErrorType } from './ng-wizard-error-type.enum';\r\nimport { NgWizardError } from './ng-wizard.error';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-error',\r\n  templateUrl: './ng-wizard-error.component.html',\r\n  styleUrls: ['./ng-wizard-error.component.scss']\r\n})\r\nexport class NgWizardErrorComponent {\r\n  @Input() public error: NgWizardError;\r\n\r\n  public NgWizardErrorType = NgWizardErrorType;\r\n}\r\n","<div *ngIf=\"error\" class=\"ng-wizard-error\">\r\n  <div [ngSwitch]=\"error.type\" class=\"ng-wizard-error-message\">\r\n\r\n    <!-- NO_WIZARD_ROUTE error -->\r\n\r\n    <span *ngSwitchCase=\"NgWizardErrorType.NO_WIZARD_ROUTE\" class=\"no-wizard-route\">\r\n      No route configuration for the {{ error.wizardComponentName }} found.<br/>\r\n      Add a route for the {{ error.wizardComponentName }} to your AppRoutingModule.<br/>\r\n      <pre>\r\nconst routes: Routes = [\r\n    &#123; path: '', component: {{ error.wizardComponentName }} &#125;,\r\n];\r\n\r\n@NgModule(&#123;\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n&#125;)\r\nexport class AppRoutingModule &#123; &#125;</pre>\r\n    </span>\r\n\r\n    <!-- NO_CHILD_ROUTES error -->\r\n\r\n    <span *ngSwitchCase=\"NgWizardErrorType.NO_CHILD_ROUTES\" class=\"no-child-routes\">\r\n      No child routes for the {{ error.wizardComponentName }} found.<br/>\r\n      Add at least one child route for the {{ error.wizardComponentName }} to your AppRoutingModule.<br/>\r\n      <pre>\r\n&#123; path: '{{ error.wizardPath }}', component: {{ error.wizardComponentName }}, children: [\r\n    &#123; path: 'step1', component: Step1Component &#125;,\r\n    &#123; path: '**', redirectTo: 'step1' &#125;,\r\n] &#125;,</pre>\r\n    </span>\r\n\r\n    <!-- NO_WS_INTERFACE error -->\r\n\r\n    <span *ngSwitchCase=\"NgWizardErrorType.NO_WS_INTERFACE\" class=\"no-ws-interface\">\r\n      The {{ error.stepComponentName}} does not extend the NgWizardStep class or implement the\r\n      NgWizardStepInterface.<br/>\r\n      Extend the NgWizardStep class in your {{ error.stepComponentName}} or implement the\r\n      NgWizardStepInterface.<br/>\r\n      <pre>\r\n@NgComponent(...)\r\nexport class {{ error.stepComponentName }} extends NgWizardStep &#123;\r\n    constructor() &#123;\r\n        super();\r\n    &#125;\r\n&#125;</pre><br/>\r\n      or<br/>\r\n      <pre>\r\n@NgComponent(...)\r\nexport class {{ error.stepComponentName }} implements NgWizardStepInterface &#123;\r\n    wsIsValid() &#123;\r\n        return true;\r\n    &#125;\r\n    wsOnNext() &#123; &#125;\r\n    wsOnPrevious() &#123; &#125;\r\n&#125;</pre>\r\n    </span>\r\n\r\n  </div>\r\n</div>\r\n","import { NgWizardErrorType } from './ng-wizard-error-type.enum';\r\n\r\nexport abstract class NgWizardError extends Error {\r\n  public type: NgWizardErrorType;\r\n\r\n  public wizardComponentName = '';\r\n  public wizardPath = '';\r\n  public stepComponentName = '';\r\n\r\n  protected constructor(type: NgWizardErrorType, message: string) {\r\n    super(message);\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport class NoWizardRoute extends NgWizardError {\r\n  constructor(public wizardComponentName: string) {\r\n    super(\r\n      NgWizardErrorType.NO_WIZARD_ROUTE,\r\n      `No route configuration for the ${wizardComponentName} found.`,\r\n    );\r\n  }\r\n}\r\n\r\nexport class NoChildRoutes extends NgWizardError {\r\n  constructor(public wizardComponentName: string, public wizardPath: string) {\r\n    super(\r\n      NgWizardErrorType.NO_CHILD_ROUTES,\r\n      `No child routes for the ${wizardComponentName} found.`,\r\n    );\r\n  }\r\n}\r\n\r\nexport class NoWsInterface extends NgWizardError {\r\n  constructor(public stepComponentName: string) {\r\n    super(\r\n      NgWizardErrorType.NO_WS_INTERFACE,\r\n      `The ${stepComponentName} does not extend the NgWizardStep class or implement the NgWizardStepInterface.`,\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardService } from '../ng-wizard.service';\r\nimport { NgWizardStepData } from '../ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardOptions } from '../ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-navigation',\r\n  templateUrl: './ng-wizard-navigation.component.html',\r\n  styleUrls: ['./ng-wizard-navigation.component.scss']\r\n})\r\nexport class NgWizardNavigationComponent implements OnInit {\r\n  public stepData$;\r\n  public currentStepData;\r\n\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  constructor(private service: NgWizardService) { }\r\n\r\n  ngOnInit() {\r\n    this.stepData$ = this.service.getStepDataChangesAsObservable();\r\n    this.service.getCurrentStepDataAsObservable().subscribe(stepData => this.currentStepData = stepData);\r\n    this.wizardOptions = this.service.wizardOptions;\r\n  }\r\n\r\n  public goToStep(stepData: NgWizardStepData) {\r\n    if ((this.currentStepData && this.currentStepData.options && this.currentStepData.options.disableNavigation)\r\n        || stepData.order >= this.currentStepData.order) {\r\n      return;\r\n    }\r\n    this.service.navigateToStep(stepData);\r\n  }\r\n}\r\n","<div class=\"ng-wizard-navigation-container\">\r\n  <nav class=\"ng-wizard-navigation\">\r\n    <ul class=\"ng-wizard-navigation-list\">\r\n      <li *ngFor=\"let stepData of stepData$ | async\" class=\"ng-wizard-navigation-list-item\" (click)=\"goToStep(stepData);\">\r\n        <div *ngIf=\"stepData?.order < currentStepData?.order\"\r\n             [ngClass]=\"{\r\n               'ng-wizard-navigation-link': !currentStepData?.options.disableNavigation,\r\n               'ng-wizard-navigation-disabled': currentStepData?.options.disableNavigation\r\n             }\">\r\n          <span [innerHTML]=\"stepData.options.icon || wizardOptions.navBar.icons.previous\" class=\"ng-wizard-navigation-icon\"></span>\r\n          <span class=\"ng-wizard-navigation-label\">\r\n            {{ stepData.options.title }}\r\n          </span>\r\n        </div>\r\n\r\n        <div\r\n          *ngIf=\"stepData?.order === currentStepData?.order\"\r\n          class=\"ng-wizard-navigation-active\">\r\n          <span [innerHTML]=\"stepData.options.icon || wizardOptions.navBar.icons.current\" class=\"ng-wizard-navigation-icon\"></span>\r\n          <span class=\"ng-wizard-navigation-label\">\r\n            {{ stepData.options.title }}\r\n          </span>\r\n        </div>\r\n\r\n        <div *ngIf=\"stepData?.order > currentStepData?.order\"\r\n             class=\"ng-wizard-navigation-disabled\">\r\n          <span [innerHTML]=\"stepData.options.icon || wizardOptions.navBar.icons.next\" class=\"ng-wizard-navigation-icon\"></span>\r\n          <span class=\"ng-wizard-navigation-label\">\r\n            {{ stepData.options.title }}\r\n          </span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n","import { NgWizardStepInterface } from './ng-wizard-step.interface';\r\n\r\nexport abstract class NgWizardStep implements NgWizardStepInterface {\r\n  wsIsValid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  wsOnNext(): void | boolean {\r\n    return;\r\n  }\r\n\r\n  wsOnPrevious(): void | boolean {\r\n    return;\r\n  }\r\n}\r\n","import { Component, ComponentRef } from '@angular/core';\r\nimport { NgWizardService } from './ng-wizard.service';\r\n\r\n@Component({\r\n  selector: 'ng-wizard',\r\n  templateUrl: './ng-wizard.component.html',\r\n})\r\nexport class NgWizardComponent {\r\n  public error: Error;\r\n\r\n  constructor(private service: NgWizardService) {\r\n    try {\r\n      this.service.loadWizardRoutes(this.constructor.name);\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public onActivate(componentRef: ComponentRef<any>) {\r\n    try {\r\n      this.service.registerActiveComponent(componentRef);\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n}\r\n","<div class=\"ng-wizard-container\">\r\n  <ng-wizard-error [error]=\"error\"></ng-wizard-error>\r\n  <ng-wizard-navigation></ng-wizard-navigation>\r\n  <div class=\"ng-wizard-content-container\">\r\n    <router-outlet (activate)=\"onActivate($event)\"></router-outlet>\r\n  </div>\r\n  <ng-wizard-buttons></ng-wizard-buttons>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { NgWizardComponent } from './ng-wizard.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgWizardErrorComponent } from './ng-wizard-error/ng-wizard-error.component';\r\nimport { NgWizardNavigationComponent } from './ng-wizard-navigation/ng-wizard-navigation.component';\r\nimport { NgWizardButtonsComponent } from './ng-wizard-buttons/ng-wizard-buttons.component';\r\nimport { NgWizardService } from './ng-wizard.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgWizardComponent,\r\n    NgWizardErrorComponent,\r\n    NgWizardNavigationComponent,\r\n    NgWizardButtonsComponent,\r\n  ],\r\n  imports: [CommonModule, RouterModule],\r\n  providers: [NgWizardService],\r\n  exports: [NgWizardComponent],\r\n})\r\nexport class NgWizardModule {}\r\n","import { ComponentRef, Injectable } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport * as utils from './ng-wizard.utils';\r\nimport { NoChildRoutes, NoWizardRoute, NoWsInterface } from './ng-wizard-error/ng-wizard.error';\r\nimport { NgWizardStepData } from './ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardStep } from './ng-wizard-step/ng-wizard-step';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgWizardOptions } from './ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Injectable()\r\nexport class NgWizardService {\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  private wizardRoute: Route;\r\n  private stepData: NgWizardStepData[] = [];\r\n  private currentStepData: NgWizardStepData;\r\n  private currentComponent: NgWizardStep;\r\n\r\n  private stepDataChanges = new BehaviorSubject<NgWizardStepData[]>([]);\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  /**\r\n   * Initializes the wizard by parsing the wizard's child routes found in Angular's router config\r\n   * into a list of NgWizardStepData.\r\n   * @param wizardComponentName The name of the wizard component\r\n   */\r\n  public loadWizardRoutes(wizardComponentName: string) {\r\n    this.wizardRoute = this.getWizardRoute(wizardComponentName);\r\n    if (!this.wizardRoute) {\r\n      throw new NoWizardRoute(wizardComponentName);\r\n    }\r\n    this.wizardOptions = utils.mergeWizardOptions(this.wizardRoute.data);\r\n    this.loadChildRoutes(this.wizardRoute);\r\n  }\r\n\r\n  /**\r\n   * Checks and stores the currently displayed component.\r\n   * @param componentRef A reference to the currently displayed component\r\n   */\r\n  public registerActiveComponent(componentRef: ComponentRef<any>) {\r\n    if (!utils.componentImplementsNgWizardStepInterface(componentRef)) {\r\n      throw new NoWsInterface(componentRef.constructor.name);\r\n    }\r\n\r\n    // Cast to unknown before casting to NgWizardStep to let typescript know we checked and approve\r\n    // this conversion.\r\n    this.currentComponent = (componentRef as unknown) as NgWizardStep;\r\n    this.currentStepData = utils.getStepDataForUrl(this.stepData, this.router.url);\r\n    this.currentStepData.componentRef = componentRef;\r\n    this.resetCurrentStep();\r\n    this.currentStepData.isCurrent = true;\r\n    this.onStepDataChange();\r\n  }\r\n\r\n  /**\r\n   * Calls the current component's wsOnPrevious() or wsOnNext()) methods and navigates to the given\r\n   * step if the component does not abort or its state is invalid (for next navigation).\r\n   *\r\n   * @param stepData The NgWizardStepData of the the step to navigate to\r\n   */\r\n  public navigateToStep(stepData: NgWizardStepData) {\r\n    let goAhead;\r\n    if (this.currentStepData.order > stepData.order) {\r\n      goAhead = this.currentComponent.wsOnPrevious();\r\n    } else {\r\n      goAhead = this.currentComponent.wsIsValid() && this.currentComponent.wsOnNext();\r\n    }\r\n    if (goAhead === false) {\r\n      return;\r\n    }\r\n\r\n    let stepPath = stepData.path;\r\n    // If the wizard is added to a specific path in the application we have to join that path and\r\n    // the step's path as the path to navigate to.\r\n    // The Angular Router's relativeTo option does not seem to work when using the hash location\r\n    // strategy.\r\n    if (this.wizardRoute.path) {\r\n      stepPath = [this.wizardRoute.path, stepData.path].join('/');\r\n    }\r\n\r\n    if (stepData.options.cleanQueryParameters) {\r\n      return this.router.navigate([stepPath], { queryParams: {} });\r\n    } else {\r\n      return this.router.navigate([stepPath], { queryParamsHandling: 'merge' });\r\n    }\r\n    return this.router.navigate([stepPath], { queryParamsHandling: 'merge' });\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to the next step.\r\n   */\r\n  public navigateToNextStep() {\r\n    const nextStepData = utils.getStepDataForPath(this.stepData, this.currentStepData.nextStep);\r\n    return this.navigateToStep(nextStepData);\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to the previous step.\r\n   */\r\n  public navigateToPreviousStep() {\r\n    const previousStepData = utils.getStepDataForPath(this.stepData, this.currentStepData.previousStep);\r\n\r\n    return this.navigateToStep(previousStepData);\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to a specific route path (external to the wizard)\r\n   */\r\n  public navigateToPath(path: string) {\r\n    return this.router.navigate([path], { queryParamsHandling: 'merge' });\r\n  }\r\n\r\n  /**\r\n   * Returns the step data changes as an observable.\r\n   */\r\n  public getStepDataChangesAsObservable(): Observable<NgWizardStepData[]> {\r\n    return this.stepDataChanges.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Returns the current step data as an observable.\r\n   */\r\n  // TODO: Write a unit test for this method\r\n  public getCurrentStepDataAsObservable(): Observable<NgWizardStepData> {\r\n    return this.getStepDataChangesAsObservable().pipe(\r\n      map((stepDatas) => stepDatas.find((stepData) => stepData.isCurrent)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the Angular Route for the wizard component found in Angular's router config.\r\n   * @param wizardComponentName The name of the wizard component\r\n   */\r\n  private getWizardRoute(wizardComponentName: string): Route {\r\n    return this.router.config.find((route) => route.component && route.component.name === wizardComponentName);\r\n  }\r\n\r\n  /**\r\n   * Parses the child routes of the wizard component route and stores them as a list of\r\n   * NgWizardStepData.\r\n   * @param wizardRoute The Angular Route for the wizard component\r\n   */\r\n  private loadChildRoutes(wizardRoute: Route) {\r\n    if (!wizardRoute.children) {\r\n      throw new NoChildRoutes(wizardRoute.component.name, wizardRoute.path);\r\n    }\r\n\r\n    const childRoutes = wizardRoute.children.filter((route) => route.component);\r\n\r\n    this.stepData = [];\r\n    for (let i = 0; i < childRoutes.length; i++) {\r\n      this.registerStep(i, childRoutes[i], childRoutes[i - 1], childRoutes[i + 1]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stores a child route as an NgWizardStepData.\r\n   * @param index The index in the list of child routes\r\n   * @param stepRoute The child route\r\n   * @param previousStep The previous child route (undefined if first child route)\r\n   * @param nextStep The next child route (undefined if last child route)\r\n   */\r\n  private registerStep(index: number, stepRoute: Route, previousStep: Route, nextStep: Route) {\r\n    this.stepData.push({\r\n      order: index + 1,\r\n      componentName: stepRoute.component.name,\r\n      path: stepRoute.path,\r\n      previousStep: previousStep ? previousStep.path : undefined,\r\n      nextStep: nextStep ? nextStep.path : undefined,\r\n      isCurrent: false,\r\n      options: utils.getWizardStepOptions(stepRoute),\r\n    });\r\n    this.onStepDataChange();\r\n  }\r\n\r\n  /**\r\n   * Emits a step data change event to the subscribers when the step data changes.\r\n   */\r\n  private onStepDataChange() {\r\n    this.stepDataChanges.next(this.stepData);\r\n  }\r\n\r\n  /**\r\n   * Sets the isCurrent attribute of all step data to false.\r\n   */\r\n  private resetCurrentStep() {\r\n    this.stepData.map((stepData) => {\r\n      stepData.isCurrent = false;\r\n      return stepData;\r\n    });\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { ComponentRef } from '@angular/core';\r\nimport { NgWizardStepData } from './ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardOptions } from './ng-wizard-options/ng-wizard-options.interface';\r\nimport { NgWizardStepOptions } from './ng-wizard-step/ng-wizard-step-options';\r\n\r\n/**\r\n * Returns true if the component extends the NgWizardStep class or implements the NgWizardStepInterface.\r\n *\r\n * @param componentRef The reference to the component to verify\r\n */\r\nexport function componentImplementsNgWizardStepInterface(componentRef: ComponentRef<any>): boolean {\r\n  return 'wsIsValid' in componentRef && 'wsOnNext' in componentRef && 'wsOnPrevious' in componentRef;\r\n}\r\n\r\n/**\r\n * Returns the NgWizardStepData with the given path in the stepData list or undefined if none is\r\n * found.\r\n *\r\n * @param stepData The list with NgWizardStepDatas\r\n * @param path The path you want to get the NgWizardStepData for\r\n */\r\nexport function getStepDataForPath(stepData: NgWizardStepData[], path: string) {\r\n  return stepData.find(data => data.path === path);\r\n}\r\n\r\n/**\r\n * Returns the NgWizardStepData for the given url in the stepData list or undefined if none is\r\n * found.\r\n *\r\n * @param stepData The list with NgWizardStepDatas\r\n * @param url The url which you want to get the NgWizardStepData for\r\n */\r\nexport function getStepDataForUrl(stepData: NgWizardStepData[], url: string) {\r\n  // gets 'path' in the url '/wizard/path?key=value'\r\n  const path = url.split('/').pop().split('?')[0];\r\n  return getStepDataForPath(stepData, path);\r\n}\r\n\r\n/**\r\n * Returns the default wizard options.\r\n */\r\nexport function getDefaultWizardOptions(): NgWizardOptions {\r\n  return {\r\n    navBar: {\r\n      icons: {\r\n        previous: '<i class=\"material-icons ng-wizard-icon\">done</i>',\r\n        current: '<i class=\"material-icons ng-wizard-icon\">create</i>',\r\n        next: '<i class=\"material-icons ng-wizard-icon\">lock</i>',\r\n      },\r\n    },\r\n    buttons: {\r\n      previous: {\r\n        label: '<i class=\"material-icons ng-wizard-icon\">chevron_left</i> Previous',\r\n      },\r\n      next: {\r\n        label: 'Next <i class=\"material-icons ng-wizard-icon\">chevron_right</i>',\r\n      },\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Merges the wizard options in the wizard route's config with the default wizard options.\r\n *\r\n * @param wizardOptions The wizard options in the wizard route's config\r\n */\r\nexport function mergeWizardOptions(wizardOptions: {}): NgWizardOptions {\r\n  if (!wizardOptions) {\r\n    return getDefaultWizardOptions();\r\n  }\r\n\r\n  return { ...getDefaultWizardOptions(), ...wizardOptions };\r\n}\r\n\r\n/**\r\n * Returns the options passed to the wizard step route with an added title attribute.\r\n *\r\n * @param route The wizard step route configuration\r\n */\r\nexport function getWizardStepOptions(route: Route): NgWizardStepOptions {\r\n  if (!route.data) {\r\n    return { title: getStepTitleFromRoute(route) };\r\n  }\r\n\r\n  return {\r\n    ...route.data,\r\n    title: getStepTitleFromRoute(route),\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the step title based on the Route configuration.\r\n * If the route has a data.title attribute it will be returned.\r\n * Else the path will be capitalized and '-' or '_' characters will be replaces by spaces.\r\n *\r\n * @param route The Angular Route object\r\n */\r\nexport function getStepTitleFromRoute(route: Route): string {\r\n  if (route.data && route.data.title) {\r\n    return route.data.title;\r\n  }\r\n  return capitalize(insertSpaces(route.path));\r\n}\r\n\r\n/**\r\n * Capitalizes the first character of the passed value.\r\n */\r\nfunction capitalize(value: string): string {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\r\n}\r\n\r\n/**\r\n * Replaces '-' and '_' characters by spaces.\r\n */\r\nfunction insertSpaces(value: string): string {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  return value.replace(/[-_]/g, ' ').trim();\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgWizardComponent } from '../../projects/ng-wizard/src/lib/ng-wizard.component';\r\nimport { Step1Component } from './step1/step1.component';\r\nimport { Step2Component } from './step2/step2.component';\r\nimport { Step3Component } from './step3/step3.component';\r\nimport { Step4Component } from './step4/step4.component';\r\nimport { Step5Component } from './step5/step5.component';\r\n\r\nconst wizardConfig = {\r\n  // navBar: {\r\n  //   icons: {\r\n  //     previous: '<i class=\"material-icons ng-wizard-icon\">cake</i>',\r\n  //     current: '<i class=\"material-icons ng-wizard-icon\">star</i>',\r\n  //     next: '<i class=\"material-icons ng-wizard-icon\">pool</i>',\r\n  //   },\r\n  // },\r\n  // buttons: {\r\n  //   previous: {\r\n  //     label: '<i class=\"material-icons ng-wizard-icon\">arrow_left</i> Previous',\r\n  //   },\r\n  //   next: {\r\n  //     label: 'Next <i class=\"material-icons ng-wizard-icon\">arrow_right</i>',\r\n  //   },\r\n  // }\r\n};\r\n\r\nconst confirmationStepOptions = {\r\n  buttons: {\r\n    previous: {\r\n      label: '<i class=\"material-icons ng-wizard-icon\">create</i> Edit',\r\n    },\r\n    next: {\r\n      label: 'Confirm <i class=\"material-icons ng-wizard-icon\">done_all</i>',\r\n    }\r\n  }\r\n};\r\n\r\nconst doneStepOptions = {\r\n  icon: '<i class=\"material-icons ng-wizard-icon\">done_all</i>',\r\n  buttons: {\r\n    previous: {\r\n      hidden: true,\r\n    },\r\n  },\r\n  disableNavigation: true,\r\n};\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: NgWizardComponent, children: [\r\n      { path: 'personal', component: Step1Component },\r\n      { path: 'developer', component: Step2Component },\r\n      { path: 'angular', component: Step3Component },\r\n      { path: 'confirmation', component: Step4Component, data: confirmationStepOptions },\r\n      { path: 'done', component: Step5Component, data: doneStepOptions },\r\n      { path: '**', redirectTo: 'personal' },\r\n  ], data: wizardConfig},\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent { }\r\n","<div class=\"wizard-container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgWizardModule } from '../../projects/ng-wizard/src/lib/ng-wizard.module';\r\nimport { Step1Component } from './step1/step1.component';\r\nimport { Step2Component } from './step2/step2.component';\r\nimport { Step3Component } from './step3/step3.component';\r\nimport { Step4Component } from './step4/step4.component';\r\nimport { Step5Component } from './step5/step5.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    Step1Component,\r\n    Step2Component,\r\n    Step3Component,\r\n    Step4Component,\r\n    Step5Component\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgWizardModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n  public formValues = {\r\n    lastName: '',\r\n    firstName: '',\r\n    gitUser: '',\r\n    favoriteProject: '',\r\n    ngVersion: 0,\r\n    ngRouter: false,\r\n  };\r\n\r\n  public setFormValues(values: any) {\r\n    this.formValues = { ...this.formValues, ...values };\r\n  }\r\n\r\n  public step1IsValid() {\r\n    return this.formValues.lastName && this.formValues.firstName;\r\n  }\r\n\r\n  public step2IsValid() {\r\n    return this.step1IsValid();\r\n  }\r\n\r\n  public step3IsValid() {\r\n    return this.step2IsValid() && this.formValues.ngVersion >= 7;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppService } from '../app.service';\r\n\r\n@Component({\r\n  selector: 'app-step1',\r\n  templateUrl: './step1.component.html',\r\n})\r\nexport class Step1Component extends NgWizardStep implements OnInit {\r\n  public form = new FormGroup({\r\n    lastName: new FormControl('', Validators.required),\r\n    firstName: new FormControl('', Validators.required),\r\n  });\r\n\r\n  constructor(private service: AppService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form.get('lastName').setValue(this.service.formValues.lastName);\r\n    this.form.get('firstName').setValue(this.service.formValues.firstName);\r\n  }\r\n\r\n  wsIsValid() {\r\n    this.form.get('lastName').markAsTouched();\r\n    this.form.get('firstName').markAsTouched();\r\n\r\n    return this.form.valid;\r\n  }\r\n\r\n  wsOnNext() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n}\r\n","<div [formGroup]=\"form\">\r\n  <h1>Personal information</h1>\r\n  <p>\r\n    <label>Last name*</label>\r\n    <input type=\"text\" formControlName=\"lastName\" />\r\n  </p>\r\n  <p>\r\n    <label>First name*</label>\r\n    <input type=\"text\" formControlName=\"firstName\" />\r\n  </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { AppService } from '../app.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-step2',\r\n  templateUrl: './step2.component.html',\r\n})\r\nexport class Step2Component extends NgWizardStep implements OnInit {\r\n  public form = new FormGroup({\r\n    gitUser: new FormControl(''),\r\n    favoriteProject: new FormControl(''),\r\n  });\r\n\r\n  constructor(private service: AppService, private router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.service.step1IsValid()) {\r\n      return this.router.navigate(['personal']);\r\n    }\r\n\r\n    this.form.get('gitUser').setValue(this.service.formValues.gitUser);\r\n    this.form.get('favoriteProject').setValue(this.service.formValues.favoriteProject);\r\n  }\r\n\r\n  wsOnNext() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n\r\n  wsOnPrevious() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n}\r\n","<div [formGroup]=\"form\">\r\n  <h1>Developer profile</h1>\r\n  <p>\r\n    <label>GitHub username</label>\r\n    <input type=\"text\" formControlName=\"gitUser\" />\r\n  </p>\r\n  <p>\r\n    <label>Favorite GitHub project</label>\r\n    <input type=\"text\" formControlName=\"favoriteProject\" />\r\n  </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppService } from '../app.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-step3',\r\n  templateUrl: './step3.component.html',\r\n})\r\nexport class Step3Component extends NgWizardStep implements OnInit {\r\n  public form = new FormGroup({\r\n    ngVersion: new FormControl('', [Validators.required, this.validateNgVersion]),\r\n    ngRouter: new FormControl(''),\r\n  });\r\n\r\n  constructor(private service: AppService, private router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.service.step2IsValid()) {\r\n      return this.router.navigate(['developer']);\r\n    }\r\n\r\n    this.form.get('ngVersion').setValue(this.service.formValues.ngVersion);\r\n    this.form.get('ngRouter').setValue(this.service.formValues.ngRouter);\r\n  }\r\n\r\n  wsIsValid() {\r\n    this.form.get('ngVersion').markAsTouched();\r\n    return this.form.valid;\r\n  }\r\n\r\n  wsOnNext() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n\r\n  wsOnPrevious() {\r\n    this.service.setFormValues(this.form.value);\r\n  }\r\n\r\n  private validateNgVersion(control: FormControl) {\r\n    return control.value && control.value >= 9 ? null : { validateNgVersion: { valid: false } };\r\n  }\r\n}\r\n","<div [formGroup]=\"form\">\r\n  <h1>Angular usage</h1>\r\n  <p>\r\n    <label>Your project's Angular version*</label>\r\n    <input type=\"number\" formControlName=\"ngVersion\" size=\"3\"/>\r\n    <span class=\"error\"\r\n          *ngIf=\"form.get('ngVersion').touched && !form.get('ngVersion').valid\">\r\n      Version must be equal to or greater than 9.</span>\r\n  </p>\r\n  <p>\r\n    <input type=\"checkbox\" formControlName=\"ngRouter\" id=\"ngRouter\">\r\n    <label for=\"ngRouter\">Your projects includes Angular's Router</label>\r\n  </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\nimport { AppService } from '../app.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-step4',\r\n  templateUrl: './step4.component.html',\r\n})\r\nexport class Step4Component extends NgWizardStep implements OnInit {\r\n  public values;\r\n\r\n  constructor(private service: AppService, private router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.service.step3IsValid()) {\r\n      return this.router.navigate(['angular']);\r\n    }\r\n\r\n    this.values = this.service.formValues;\r\n  }\r\n}\r\n","<h1>Confirmation</h1>\r\n<table>\r\n  <tr>\r\n    <td>Last name</td>\r\n    <td>{{values.lastName}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>First name</td>\r\n    <td>{{values.firstName}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>GitHub username</td>\r\n    <td>{{values.gitUser}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Favorite GitHub project</td>\r\n    <td>{{values.favoriteProject}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Angular version</td>\r\n    <td>{{values.ngVersion}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Angular router</td>\r\n    <td>{{values.ngRouter ? 'Yes' : 'No'}}</td>\r\n  </tr>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardStep } from '../../../projects/ng-wizard/src/lib/ng-wizard-step/ng-wizard-step';\r\n\r\n@Component({\r\n  selector: 'app-step5',\r\n  templateUrl: './step5.component.html',\r\n})\r\nexport class Step5Component extends NgWizardStep {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\n\r\n","<h1>All steps completed!</h1>\r\n<br/>\r\nNavigation is disabled\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}